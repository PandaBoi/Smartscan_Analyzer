#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.24
#  in conjunction with Tcl version 8.6
#    Jul 12, 2019 01:45:45 AM IST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import length_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = length (root)
    length_support.init(root, top)
    root.lift()
    root.wm_attributes('-topmost',True)
    root.after_idle(root.attributes,'-topmost',False)
    root.mainloop()

w = None
def create_length(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = length (w)

    length_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_length():
    global w
    w.destroy()
    w = None

class length:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("613x474+635+190")
        top.title("Length")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.033, rely=0.084, relheight=0.876
                , relwidth=0.938)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(width=575)

        self.file_list = tk.Listbox(self.Frame1)
        self.file_list.place(relx=0.104, rely=0.12, relheight=0.713
                , relwidth=0.442)
        self.file_list.configure(background="white")
        self.file_list.configure(font="TkFixedFont")
        self.file_list.configure(width=254)
        self.file_list.bind('<<ListboxSelect>>',lambda e: self.click(e))

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.696, rely=0.241, height=41, width=81)
        self.Button1.configure(text='''LOAD''')
        self.Button1.configure(width=81)
        self.Button1.configure(command = self.file_l)

        self.Button2 = tk.Button(self.Frame1)
        self.Button2.place(relx=0.696, rely=0.506, height=41, width=81)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(text='''SAVE''')
        self.Button2.configure(command = length_support.save_stuff)


        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                compound="left",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(command = length_support.open_file,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                compound="left",
                font="TkMenuFont",
                foreground="#000000",
                label="Open_files")

    def file_l(self):
        # print(tumor_support.file_list)
        self.file_list.delete('0','end')
        lis = length_support.files_list
        for l in lis.keys():
            self.file_list.insert('end',(l ,"=>=>=>=>",lis[l]))


    def click(self,e):  
        print("click")
        # try:
        lol = e.widget
        idx = lol.curselection()
        print("select",idx[0])
        value = lol.get(idx[0])
        value = value[0]
        print(value)
        res = length_support.calc_length(value)
        print("back with",res)
        lol.delete(idx[0])
        lol.insert(idx[0],(value,"=>=>=>=>",res))

if __name__ == '__main__':
    vp_start_gui()





