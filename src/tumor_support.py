#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.24
#  in conjunction with Tcl version 8.6
#    Jul 08, 2019 08:52:17 PM IST  platform: Linux

import sys
sys.path.append('../')
from tkinter import filedialog, messagebox
from tools import newidea,draaw,find_area
import os
import glob
import re
import pickle


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

file_list = {}

def tumor_dir():
<<<<<<< Updated upstream
    global file_list
    # print("working")
    dir = filedialog.askdirectory(initialdir = "/home/rohan/codes/LVP",title = "select Dir")
    # print(dir)
    file_list = glob.glob(dir+"/*")
    lis = dir.split('/')
    out_path = dir.strip(lis[-1]) + "converted_images/"
=======
    
    global file_list,out_path,directory
    file_list = {}
    try:
        
        # print("working")
        directory = filedialog.askdirectory(initialdir = "/home/rohan/codes/LVP",title = "select directory")
        check = glob.glob(directory+"/*.pkl")
        file_lis = glob.glob(directory+"/*")
        newidea.caliberate(file_lis[-1])
       
        if len(check) == 1:
            with open(check[0],'rb') as f:
                file_list = pickle.load(f)
                print(file_list)
                file_lis.remove(check[0])

        
        
        
        all_files = [x.split('/')[-1] for x in file_lis ]
        if len(check) ==0:
            for l in all_files:
                file_list[l] = 0.0



        
        out_path = directory.strip(directory.split('/')[-1]) + "converted_images/"

        try:
            os.mkdir(out_path)
        except:
            pass

        newidea.converter(directory,out_path)

        messagebox.showinfo('Done',"All files are converted!")
>>>>>>> Stashed changes

    try:
        os.mkdir(out_path)
    except:
        messagebox.showinfo('Error',"Please select a proper Directory!")

<<<<<<< Updated upstream
=======
    messagebox.showinfo("Result","Volume is "  + str(result_vol) + "mm^3")
>>>>>>> Stashed changes

    file_path = out_path + name + '.png'
    res = draaw.input_file(file_path)
    file_list[name] = res

    return res

def save_stuff():

    with open(directory + '/result.pkl','wb') as f:
        pickle.dump(file_list, f)

    messagebox.showinfo('Saved!',"The results until now have been saved!")

  


def calc_vol():

    result_vol = find_area.find_volume(file_list)

    messagebox.showinfo("Result","Volume is" + str(result_vol) + "mm^3")




    




def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import tumor
    tumor.vp_start_gui()




